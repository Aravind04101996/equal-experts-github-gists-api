name: Build, Publish Docker image to ECR
on:
  workflow_dispatch:
    inputs:
      ecrrepo:
        description: "Name of the ECR Repository"
        type: string
        default: github-gists-api
        required: false
jobs:
    build_docker_image:
        name: build_docker_image
        runs-on: ubuntu-latest

        permissions:
          id-token: write
          contents: read
        
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v5
            with:
                ref: main
        
          - name: Assume IAM Role
            uses: aws-actions/configure-aws-credentials@v5.1.0
            with:
              role-to-assume: ${{ secrets.IAM_ROLE_TO_ASSUME }}
              role-session-name: ecr-image-push
              aws-region: us-west-2
    
          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v2
          
          - name: Read Application version
            id: app-version
            run: |
              echo "version=$(cat version)" >> $GITHUB_OUTPUT
            
          - name: Build Docker Image
            env:
              ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              ECR_REPOSITORY: github-gists-api
              IMAGE_TAG: ${{ steps.app-version.outputs.version }}
            run: |
              docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          
          - name: Run Trivy Scan
            uses: aquasecurity/trivy-action@0.33.1
            with:
              image-ref: ${{ steps.login-ecr.outputs.registry }}/github-gists-api:${{ steps.app-version.outputs.version }}
              format: 'table'
              exit-code: '1'
              ignore-unfixed: true
              vuln-type: 'os,library'
              severity: 'CRITICAL,HIGH'
          
          - name: Publish to ECR
            env:
              ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              ECR_REPOSITORY: github-gists-api
              IMAGE_TAG: ${{ steps.app-version.outputs.version }}
            run: |
              docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


  